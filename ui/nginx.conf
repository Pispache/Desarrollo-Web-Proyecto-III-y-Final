server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  # SPA fallback
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Evitar caché agresiva del index en navegadores (p.ej. Brave/Chrome)
  location = /index.html {
    add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0" always;
    add_header Pragma "no-cache" always;
    expires -1;
  }

  # Proxy a la API (servicio "api" del compose, puerto 8080)
  location /api/ {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Importante: SIN /api/ aquí, para no reescribir el path
    proxy_pass http://api:8080;
    # Si en el futuro quisieras eliminar el prefijo /api/ al upstream:
    # location /api/ {
    #   rewrite ^/api/(.*)$ /$1 break;
    #   proxy_pass http://api:8080;
    # }
  }

  # Proxy al Auth Service (OAuth2.0 + JWT)
  # Nota: El servicio interno escucha en 5000 (PORT=5000). Reescribimos /auth/ -> / para que
  #       el upstream reciba /api/auth/... tal como lo espera el auth-service.
  location /auth/ {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Reescribir quitando el prefijo /auth/
    rewrite ^/auth/(.*)$ /$1 break;
    proxy_pass http://auth-service:5000;
  }

  # Health local del contenedor UI
  location /health {
    return 200 'ok';
    add_header Content-Type text/plain;
  }
}
